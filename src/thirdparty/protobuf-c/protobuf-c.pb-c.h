/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: protobuf-c.proto */

#ifndef PROTOBUF_C_protobuf_2dc_2eproto__INCLUDED
#define PROTOBUF_C_protobuf_2dc_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1000000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1003003 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif

#include "google/protobuf/descriptor.pb-c.h"

typedef struct _ProtobufCFileOptions ProtobufCFileOptions;
typedef struct _ProtobufCMessageOptions ProtobufCMessageOptions;
typedef struct _ProtobufCFieldOptions ProtobufCFieldOptions;


/* --- enums --- */


/* --- messages --- */

struct  _ProtobufCFileOptions
{
  ProtobufCMessage base;
  /*
   * Suppresses pb-c.{c,h} file output completely.
   */
  protobuf_c_boolean has_no_generate;
  protobuf_c_boolean no_generate;
  /*
   * Generate helper pack/unpack functions?
   * For backwards compatibility, if this field is not explicitly set,
   * only top-level message pack/unpack functions will be generated
   */
  protobuf_c_boolean has_gen_pack_helpers;
  protobuf_c_boolean gen_pack_helpers;
  /*
   * Generate helper init message functions?
   */
  protobuf_c_boolean has_gen_init_helpers;
  protobuf_c_boolean gen_init_helpers;
  /*
   * Use const char * instead of char * for string fields
   */
  protobuf_c_boolean has_const_strings;
  protobuf_c_boolean const_strings;
  /*
   * For oneof fields, set ProtobufCFieldDescriptor name field to the
   * name of the containing oneof, instead of the field name
   */
  protobuf_c_boolean has_use_oneof_field_name;
  protobuf_c_boolean use_oneof_field_name;
  /*
   * Overrides the package name, if present
   */
  char *c_package;
};
#define PROTOBUF_CFILE_OPTIONS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&protobuf_cfile_options__descriptor) \
    , 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, NULL }


struct  _ProtobufCMessageOptions
{
  ProtobufCMessage base;
  /*
   * Overrides the parent setting only if present
   */
  protobuf_c_boolean has_gen_pack_helpers;
  protobuf_c_boolean gen_pack_helpers;
  /*
   * Overrides the parent setting only if present
   */
  protobuf_c_boolean has_gen_init_helpers;
  protobuf_c_boolean gen_init_helpers;
  /*
   * Reserved base message field name
   */
  char *base_field_name;
};
extern char protobuf_cmessage_options__base_field_name__default_value[];
#define PROTOBUF_CMESSAGE_OPTIONS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&protobuf_cmessage_options__descriptor) \
    , 0, 0, 0, 1, protobuf_cmessage_options__base_field_name__default_value }


struct  _ProtobufCFieldOptions
{
  ProtobufCMessage base;
  /*
   * Treat string as bytes in generated code
   */
  protobuf_c_boolean has_string_as_bytes;
  protobuf_c_boolean string_as_bytes;
};
#define PROTOBUF_CFIELD_OPTIONS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&protobuf_cfield_options__descriptor) \
    , 0, 0 }


/* ProtobufCFileOptions methods */
void   protobuf_cfile_options__init
                     (ProtobufCFileOptions         *message);
size_t protobuf_cfile_options__get_packed_size
                     (const ProtobufCFileOptions   *message);
size_t protobuf_cfile_options__pack
                     (const ProtobufCFileOptions   *message,
                      uint8_t             *out);
size_t protobuf_cfile_options__pack_to_buffer
                     (const ProtobufCFileOptions   *message,
                      ProtobufCBuffer     *buffer);
ProtobufCFileOptions *
       protobuf_cfile_options__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   protobuf_cfile_options__free_unpacked
                     (ProtobufCFileOptions *message,
                      ProtobufCAllocator *allocator);
/* ProtobufCMessageOptions methods */
void   protobuf_cmessage_options__init
                     (ProtobufCMessageOptions         *message);
size_t protobuf_cmessage_options__get_packed_size
                     (const ProtobufCMessageOptions   *message);
size_t protobuf_cmessage_options__pack
                     (const ProtobufCMessageOptions   *message,
                      uint8_t             *out);
size_t protobuf_cmessage_options__pack_to_buffer
                     (const ProtobufCMessageOptions   *message,
                      ProtobufCBuffer     *buffer);
ProtobufCMessageOptions *
       protobuf_cmessage_options__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   protobuf_cmessage_options__free_unpacked
                     (ProtobufCMessageOptions *message,
                      ProtobufCAllocator *allocator);
/* ProtobufCFieldOptions methods */
void   protobuf_cfield_options__init
                     (ProtobufCFieldOptions         *message);
size_t protobuf_cfield_options__get_packed_size
                     (const ProtobufCFieldOptions   *message);
size_t protobuf_cfield_options__pack
                     (const ProtobufCFieldOptions   *message,
                      uint8_t             *out);
size_t protobuf_cfield_options__pack_to_buffer
                     (const ProtobufCFieldOptions   *message,
                      ProtobufCBuffer     *buffer);
ProtobufCFieldOptions *
       protobuf_cfield_options__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   protobuf_cfield_options__free_unpacked
                     (ProtobufCFieldOptions *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*ProtobufCFileOptions_Closure)
                 (const ProtobufCFileOptions *message,
                  void *closure_data);
typedef void (*ProtobufCMessageOptions_Closure)
                 (const ProtobufCMessageOptions *message,
                  void *closure_data);
typedef void (*ProtobufCFieldOptions_Closure)
                 (const ProtobufCFieldOptions *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor protobuf_cfile_options__descriptor;
extern const ProtobufCMessageDescriptor protobuf_cmessage_options__descriptor;
extern const ProtobufCMessageDescriptor protobuf_cfield_options__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_protobuf_2dc_2eproto__INCLUDED */
