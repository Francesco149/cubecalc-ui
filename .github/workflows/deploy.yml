name: "Deployment"

concurrency:
  group: '${{ github.workflow }} @ ${{ github.event.pull_request.head.label || github.head_ref || github.ref }}'
  cancel-in-progress: true

on:
  pull_request:
  push:
    branches:
      - '**'
    tags:
      - '!9999.9999.9999-nightly'


env:
  # todo: updgrade to 0.62.2 when more distros have it
  #       and drop workaround in windows-build.sh
  MESON_VERSION: '0.61.2'

jobs:
  build-appimage:
    strategy:
      matrix:
        ARCH: [x86_64]

    name: Desktop ${{ matrix.ARCH }}
    runs-on: ubuntu-latest
    env:
      ARCH: ${{ matrix.ARCH }}
    steps:
    - uses: actions/checkout@v3
    - name: Install dependencies (x86_64)
      if: matrix.ARCH == 'x86_64'
      run: |
        sudo apt-get update
        sudo apt-get install -y meson libglfw3-dev
    - name: Build AppImage (x86_64)
      if: matrix.ARCH == 'x86_64'
      run: |
        cd src
        ./appimage.sh
    - name: Archive AppImage
      uses: actions/upload-artifact@v3
      with:
        name: AppImage
        path: src/cubecalc-ui-*.AppImage

  build-windows:
    strategy:
      matrix:
        ARCH: [x86_64, i686]

    name: Windows ${{ matrix.ARCH }}
    runs-on: ubuntu-latest
    container: mstorsjo/llvm-mingw:20220906
    env:
      ARCH: ${{ matrix.ARCH }}
    steps:
    - uses: actions/checkout@v3
    # based on https://github.com/taisei-project/taisei/blob/master/.github/workflows/main.yml
    - name: Install Tools
      run: >
        apt update || true

        apt install -y -qq software-properties-common

        add-apt-repository ppa:git-core/ppa -y

        apt install -y -qq
        python3-pip
        git

        pip3 install
        meson==${{ env.MESON_VERSION }}
        ninja

    - name: Install ubuntu dependencies
      run: |
        apt-get update
        apt-get install -y cmake make libxinerama-dev libxcursor-dev libxi-dev
    - name: Fetch dependencies
      run: |
        git clone --depth 1 --branch 3.3.8 https://github.com/glfw/glfw ~/glfw
    - name: Build windows and dependencies
      run: |
        ln -svf "$(pwd)" ~/cubecalc-ui
        DONT_RUN=true NOSUDO=true ./src/windows-build.sh ${{ matrix.ARCH }}
        mv ~/cubecalc-mingw/bin/cubecalc-ui.exe ~/cubecalc-mingw/bin/cubecalc-ui-windows-${{ matrix.ARCH }}.exe

    - name: Archive windows
      uses: actions/upload-artifact@v3
      with:
        name: windows-${{ matrix.ARCH }}
        path: ~/cubecalc-mingw/bin/cubecalc-ui-windows-${{ matrix.ARCH }}.exe

  build-nix-emscripten:
    name: Cachix, Web
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: cachix/install-nix-action@v18
      with:
        nix_path: nixpkgs=channel:nixos-unstable
    - uses: cachix/cachix-action@v11
      with:
        name: lolisamurai
        authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
    - name: Build and cache nix packages
      run: src/cachix-push.sh
    - name: Package emscripten build
      run: |
        mv -v result cubecalc-ui-web
        7z a cubecalc-ui-web.zip cubecalc-ui-web/
    - name: Archive web build
      uses: actions/upload-artifact@v3
      with:
        name: web
        path: cubecalc-ui-web.zip

  upload:
    name: Create release and upload artifacts
    if: github.event_name == 'release' && github.event.action == 'created'
    needs:
      - build-appimage
      - build-nix-emscripten
      - build-windows
    runs-on: ubuntu-latest
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v2
      - name: Inspect directory after downloading artifacts
        run: ls -alFR
      - name: Create release and upload artifacts
        env:
          GITHUB_TOKEN: ${{ secrets.GHTOKEN }}
        run: |
          wget -q https://github.com/Francesco149/cubecalc-ui/releases/download/0.0.0-pyuploadtool-2022-10-17/pyuploadtool-x86_64.AppImage
          wget -q https://github.com/Francesco149/cubecalc-ui/releases/download/0.0.0-pyuploadtool-2022-10-17/pyuploadtool-x86_64.AppImage.sum
          sha512sum -c pyuploadtool-x86_64.AppImage.sum &&
          chmod +x pyuploadtool-x86_64.AppImage &&
          ./pyuploadtool-x86_64.AppImage AppImage/cubecalc-ui*.AppImage web/cubecalc-ui-web.zip windows-*/cubecalc-ui-*.exe
